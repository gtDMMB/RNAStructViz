/* BuildTargetInfo.h(.in) : Local platform specific definitions inserted at compile time; 
 * Author: Maxie D. Schmidt (maxieds@gmail.com)
 * Created: 2018.10.31
 */

#ifndef __BUILD_TARGET_INFO_H__
#define __BUILD_TARGET_INFO_H__

#ifdef TARGETOS_LINUX
     #define __TARGETOS_LINUX__
     #define TARGETOS "GNU/Linux"
#endif

#ifdef TARGETOS_MACOSX
     #define __TARGETOS_APPLE__
     #define TARGETOS "Mac/OSX"
     #ifndef __APPLE__
          #define __APPLE__
     #endif
     #include <string.h>
     /* Mac OSX apparently does not support the strchrnul function: */
     static inline char* strchrnul(const char *s, int ch) {
          if(s == NULL) {
               return NULL;
	  }
          char *strchrResult = (char *) strchr(s, ch);
          if(strchrResult == NULL) {
	       size_t slen = strnlen(s, 2048);
               return (char *) (s + slen);
	  }
          return strchrResult;
     }	   
#endif

#ifdef TARGETOS_GENERIC_UNIX
     #define __TARGETOS_UNIX__
     #define TARGETOS "Unix"
#endif

#ifndef TARGETOS
     #define TARGETOS "Unknown Build Target"
#endif

#ifdef __LOCAL_NOUSE_THREADS
     #undef _GLIBCXX__PTHREADS
     #undef _GLIBCXX_HAS_GTHREADS
     #ifdef __STDC_NO_THREADS__
          #undef __STDC_NO_THREADS__
     #endif
     #define __STDC_NO_THREADS__ (1)
#endif

#define _GNU_SOURCE

#define FLTK_USE_CAIRO  1
#define FLTK_HAVE_CAIRO 1

//#define ERRORS_TO_ISO8859_1   1      /* FLTK Unicode character encoding */
//#define ERRORS_TO_CP1252      1

#ifndef BOOST_FILESYSTEM_NO_DEPRECATED
#define BOOST_FILESYSTEM_NO_DEPRECATED
#endif

#define __STRUCTVIZ_INSTALL_SIGNAL_HANDLERS
#define __STRUCTVIZ_INSTALL_SIGSEGV_HANDLER     1
#define __STRUCTVIZ_INSTALL_CTRLC_HANDLER       1

#define RNASTRUCTVIZ_VSTRING         ("RNAStructViz v1.8.7-testing -- RNA Secondary Structure Comparison Multi-Tool")

#define GIT_COMMIT_HASH              ("##__GIT_COMMITREV_HASHNUM__##")
#define GIT_COMMIT_HASH_SHORT        ("##__GIT_COMMITREV_HASHNUM_SHORT__##")
#define GIT_COMMIT_DATE              ("##__GIT_COMMITREV_DATE__##")
#define GIT_BRANCH_REVSTRING         ("##__GIT_DESCRIBE_REVSTRING__##")
#define BUILD_PLATFORM_ID            ("##__BUILD_PLATFORM_ID__##")
#define BUILD_DATETIME               ("##__LOCAL_BUILD_TIME__##")
#define BUILD_FLTK_CONFIG            ("##__BUILD_FLTK_CONFIG__##")

#define HUGE_BUFFER_LINE_SIZE        (2048)

#include <stdlib.h>
#include <stdio.h>

#include <FL/Fl.H>
#include <FL/fl_ask.H>

#include <string>
using std::string;

class ApplicationBuildInfo {

     public:
          static inline string UserManualWikiLink() {
               return string("User Manual: https://github.com/gtDMMB/RNAStructViz/wiki");
	  }

	  static inline string GitRevisionInfoFull() {
               char revString[HUGE_BUFFER_LINE_SIZE];
               snprintf(revString, HUGE_BUFFER_LINE_SIZE, 
	                "Git Revision: %s (%s) [%s]", 
	                GIT_COMMIT_HASH_SHORT, GIT_COMMIT_HASH, GIT_BRANCH_REVSTRING);
               revString[HUGE_BUFFER_LINE_SIZE - 1] = '\0';
               return string(revString);
          }

	  static inline string GitRevisionInfo() {
               char revString[HUGE_BUFFER_LINE_SIZE];
               snprintf(revString, HUGE_BUFFER_LINE_SIZE, 
	                "Git Revision: %s [%s]", 
	                GIT_COMMIT_HASH_SHORT, GIT_BRANCH_REVSTRING);
               revString[HUGE_BUFFER_LINE_SIZE - 1] = '\0';
               return string(revString);
          }
          static inline string GitRevisionDate() {
               return string("Revision Date: ") + string(GIT_COMMIT_DATE);
          }

          static inline string BuildPlatform() {
	       return string("Target Platform: ") + string(BUILD_PLATFORM_ID);
	  }

	  static inline string LocalBuildDateTime() {
	       return string("Local Build Time: ") + string(BUILD_DATETIME);
	  }

	  static inline string BuildFLTKConfig() {
               return string("FLTK-Config: ") + 
		      string(BUILD_FLTK_CONFIG);
	  }

	  static inline string CairoVersionString() {
               return string("Cairo Library: ") + string(CAIRO_VERSION_STRING);
	  }

	  static inline string FLTKVersionString() {
               char fltkVersionStr[HUGE_BUFFER_LINE_SIZE];
	       snprintf(fltkVersionStr, HUGE_BUFFER_LINE_SIZE - 1, 
			"%d.%d.%d (API #%d)", 
			FL_MAJOR_VERSION, FL_MINOR_VERSION, FL_PATCH_VERSION, FL_API_VERSION);
	       fltkVersionStr[HUGE_BUFFER_LINE_SIZE - 1] = '\0';
	       return string("FLTK Library: ") + string(fltkVersionStr);
	  }

	  static inline void PrintAboutListing(const char *aboutStr = NULL, FILE *whichOut = stderr) {
               if(whichOut == NULL) {
                    whichOut = stderr;
	       }
	       fprintf(whichOut, "==== %s ====\n\n", RNASTRUCTVIZ_VSTRING);
	       fprintf(whichOut, "ABOUT THIS APPLICATION:\n");
	       if(aboutStr == NULL) {
                    fprintf(whichOut, "   >> %s\n   >> %s\n   >> %s\n   >> %s\n   >> %s\n   >> %s\n   >> %s\n   >> %s\n", 
			       UserManualWikiLink().c_str(), GitRevisionInfoFull().c_str(), 
			       GitRevisionDate().c_str(), FLTKVersionString().c_str(),
			       BuildFLTKConfig().c_str(),  
			       CairoVersionString().c_str(), BuildPlatform().c_str(), 
			       LocalBuildDateTime().c_str());
	       }
	       else {
	            fprintf(whichOut, "%s\n", aboutStr);
	       }
	       const char *bugReportMsg = "Please include a screenshot along with this information in any bug report you submit. "
		                          "New issues with the application can be submitted by following the instructions at " 
					  "https://github.com/gtDMMB/RNAStructViz/wiki/BugReportingAndErrors.";
	       fprintf(whichOut, "BUG REPORT INFORMATION:\n**%s**\n", bugReportMsg);
	  }

};

#endif
